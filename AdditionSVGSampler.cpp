#include <cstdlib>
#include <string>
#include <sstream>
#include "AdditionSVGSampler.hpp"
#include <Util.hpp>


const std::string gGridName("addition_svg: ");

AdditionSVGSampler::AdditionSVGSampler(int layoutPolicy,
                       int genPolicy)
: IGridsGenerator(layoutPolicy, genPolicy) {

    mBucket.resize(5);
    // A temporary realGrid list container.
    std::vector<Grid> tmpGrids;
    
    // ===== For 1 photo =====

    tmpGrids.clear();

    tmpGrids.push_back(Grid(gGridName + "1-17"));
    tmpGrids.back().slots.push_back(RectSlot(
        70.0f, 70.0f, 499.99993896484375f, 499.9119873046875f, 
        0, 
        false, 
        "M 478.99798583984375 418.73309326171875 C 476.3443908691406 417.0579833984375 473.5132751464844 415.6819763183594 470.55657958984375 414.6304931640625 C 479.0198669433594 411.49884033203125 486.2970886230469 405.8082580566406 491.37689208984375 398.3497009277344 C 496.4566650390625 390.8911437988281 499.08648681640625 382.0353698730469 498.90081787109375 373.01318359375 C 498.71514892578125 363.9909973144531 495.72314453125 355.2508544921875 490.34075927734375 348.00762939453125 C 484.9584045410156 340.764404296875 477.4530334472656 335.3779296875 468.86810302734375 332.59716796875 C 477.59173583984375 329.7618408203125 485.19403076171875 324.23779296875 490.58538818359375 316.8165588378906 C 495.9767150878906 309.39532470703125 498.88031005859375 300.4579162597656 498.88031005859375 291.2850646972656 C 498.88031005859375 282.1122131347656 495.9767150878906 273.1748352050781 490.58538818359375 265.75360107421875 C 485.19403076171875 258.3323669433594 477.59173583984375 252.8083038330078 468.86810302734375 249.97299194335938 C 477.59173583984375 247.13766479492188 485.19403076171875 241.6136016845703 490.58538818359375 234.1923828125 C 495.9767150878906 226.77114868164062 498.88031005859375 217.8335418701172 498.88031005859375 208.6606903076172 C 498.88031005859375 199.4878387451172 495.9767150878906 190.55044555664062 490.58538818359375 183.12921142578125 C 485.19403076171875 175.70797729492188 477.59173583984375 170.18392944335938 468.86810302734375 167.34860229492188 C 477.54962158203125 164.53004455566406 485.1218566894531 159.0474853515625 490.50970458984375 151.6796875 C 495.8975524902344 144.31190490722656 498.82708740234375 135.4335174560547 498.88128662109375 126.30607604980469 C 498.9355163574219 117.17863464355469 496.1119079589844 108.2662582397461 490.81195068359375 100.83499145507812 C 485.5119934082031 93.40371704101562 478.0052795410156 87.83158874511719 469.35784912109375 84.91011047363281 C 479.2671203613281 81.81523132324219 487.7405090332031 75.2738037109375 493.24310302734375 66.47075653076172 C 498.74566650390625 57.66770553588867 500.9136657714844 47.185150146484375 499.35443115234375 36.92158508300781 C 497.79522705078125 26.658016204833984 492.61175537109375 17.292109489440918 484.74310302734375 10.520404815673828 C 476.8744201660156 3.7487006187438965 466.84027099609375 0.01894975733011961 456.45892333984375 0.006595611572265625 L 455.46331787109375 0.006595611572265625 C 446.5548095703125 0.00466030091047287 437.8608703613281 2.740705966949463 430.55902099609375 7.844139099121094 C 423.2572021484375 12.947572231292725 417.7000427246094 20.171838760375977 414.64056396484375 28.538516998291016 C 411.5389099121094 20.046960830688477 405.8654479980469 12.734591960906982 398.41058349609375 7.620738983154297 C 390.9556884765625 2.5068864822387695 382.0909729003906 -0.15363943576812744 373.05218505859375 0.009891510009765625 C 364.01336669921875 0.1734224557876587 355.25079345703125 3.1529297828674316 347.98577880859375 8.533096313476562 C 340.72076416015625 13.913263320922852 335.3153076171875 21.426015853881836 332.52288818359375 30.024208068847656 C 329.69232177734375 21.298324584960938 324.171142578125 13.69301986694336 316.75091552734375 8.299182891845703 C 309.3306884765625 2.905345916748047 300.3926696777344 0 291.21917724609375 0 C 282.0456848144531 0 273.107666015625 2.905345916748047 265.68743896484375 8.299182891845703 C 258.2672424316406 13.69301986694336 252.74603271484375 21.298324584960938 249.91546630859375 30.024208068847656 C 247.0801544189453 21.300548553466797 241.55642700195312 13.698363304138184 234.13519287109375 8.307014465332031 C 226.71395874023438 2.9156651496887207 217.7763671875 0.011951446533203125 208.603515625 0.011951446533203125 C 199.4306640625 0.011951446533203125 190.4934844970703 2.9156651496887207 183.072265625 8.307014465332031 C 175.65103149414062 13.698363304138184 170.12681579589844 21.300548553466797 167.29150390625 30.024208068847656 C 164.49905395507812 21.426015853881836 159.0931396484375 13.913263320922852 151.828125 8.533096313476562 C 144.5631103515625 3.1529297828674316 135.80101013183594 0.1734224557876587 126.76220703125 0.009891510009765625 C 117.72340393066406 -0.15363943576812744 108.85868835449219 2.5068864822387695 101.40380859375 7.620738983154297 C 93.94892883300781 12.734591960906982 88.27497100830078 20.046960830688477 85.17333984375 28.538516998291016 C 82.11691284179688 20.173179626464844 76.5631103515625 12.949522495269775 69.26416015625 7.845996856689453 C 61.9652099609375 2.7424707412719727 53.27389144897461 0.005701227113604546 44.367679595947266 0.006595611572265625 L 43.422367095947266 0.006595611572265625 C 37.71942138671875 0.004376997705549002 32.071998596191406 1.1261157989501953 26.802738189697266 3.307514190673828 C 21.533477783203125 5.488912343978882 16.74548625946045 8.687188148498535 12.71289348602295 12.719779968261719 C 8.68030071258545 16.75237274169922 5.48218297958374 21.540172576904297 3.3007845878601074 26.809432983398438 C 1.1193861961364746 32.078691482543945 -0.002215328859165311 37.72608184814453 0.0000032850075513124466 43.42903137207031 L 0.0000032850075513124466 44.0369873046875 C 0.0007567713037133217 51.50761032104492 1.9291954040527344 58.851505279541016 5.599612712860107 65.35829162597656 C 9.270030498504639 71.86507415771484 14.55782413482666 77.31446838378906 20.951175689697266 81.17908477783203 C 23.61089515686035 82.84320831298828 26.440757751464844 84.21839904785156 29.392581939697266 85.28148651123047 C 20.929309844970703 88.41311645507812 13.652056694030762 94.10372161865234 8.57226848602295 101.56227111816406 C 3.4924802780151367 109.02081298828125 0.8626635074615479 117.87681579589844 1.0483431816101074 126.89898681640625 C 1.234022855758667 135.9211654663086 4.226045608520508 144.66131591796875 9.60840129852295 151.904541015625 C 14.99075698852539 159.14776611328125 22.496105194091797 164.53402709960938 31.081058502197266 167.31480407714844 C 22.357397079467773 170.15011596679688 14.755122184753418 175.67417907714844 9.36377239227295 183.0954132080078 C 3.9724225997924805 190.5166473388672 1.0688509941101074 199.45423889160156 1.0688509941101074 208.62710571289062 C 1.0688509941101074 217.79995727539062 3.9724225997924805 226.73733520507812 9.36377239227295 234.1585693359375 C 14.755122184753418 241.5797882080078 22.357397079467773 247.1038818359375 31.081058502197266 249.939208984375 C 22.357397079467773 252.77452087402344 14.755122184753418 258.298583984375 9.36377239227295 265.71978759765625 C 3.9724225997924805 273.1410217285156 1.0688509941101074 282.07843017578125 1.0688509941101074 291.25128173828125 C 1.0688509941101074 300.42413330078125 3.9724225997924805 309.3615417480469 9.36377239227295 316.7827453613281 C 14.755122184753418 324.2039794921875 22.357397079467773 329.7280578613281 31.081058502197266 332.5633544921875 C 22.39952850341797 335.3819274902344 14.82680606842041 340.86468505859375 9.43896770477295 348.23248291015625 C 4.051130294799805 355.60028076171875 1.122081995010376 364.47845458984375 1.0678744316101074 373.60589599609375 C 1.0136667490005493 382.73333740234375 3.8372631072998047 391.6457214355469 9.13720989227295 399.0769958496094 C 14.437155723571777 406.5082702636719 21.94387435913086 412.0805969238281 30.591312408447266 415.0020751953125 C 20.682037353515625 418.0969543457031 12.209122657775879 424.6381530761719 6.706546306610107 433.44122314453125 C 1.203969955444336 442.2442626953125 -0.9640114903450012 452.7270202636719 0.5952181220054626 462.9906005859375 C 2.1544477343559265 473.254150390625 7.3378705978393555 482.6199035644531 15.20654582977295 489.3916015625 C 23.07522201538086 496.1632995605469 33.10842514038086 499.89306640625 43.489749908447266 499.9053955078125 L 44.485843658447266 499.9053955078125 C 53.39205551147461 499.90631103515625 62.0833740234375 497.169677734375 69.38232421875 492.066162109375 C 76.6812744140625 486.9626159667969 82.23507690429688 479.7389831542969 85.29150390625 471.3736572265625 C 88.39313507080078 479.8652038574219 94.06709289550781 487.1773986816406 101.52197265625 492.291259765625 C 108.97685241699219 497.4051208496094 117.84107971191406 500.0658264160156 126.8798828125 499.90228271484375 C 135.91869354248047 499.7387390136719 144.68125915527344 496.7592468261719 151.9462890625 491.37908935546875 C 159.2113037109375 485.9989013671875 164.61672973632812 478.48614501953125 167.4091796875 469.8879699707031 C 170.2445068359375 478.61163330078125 175.7687225341797 486.21380615234375 183.18994140625 491.60516357421875 C 190.61117553710938 496.99652099609375 199.54833984375 499.9002685546875 208.72119140625 499.9002685546875 C 217.89405822753906 499.9002685546875 226.83163452148438 496.99652099609375 234.25286865234375 491.60516357421875 C 241.67408752441406 486.21380615234375 247.19830322265625 478.61163330078125 250.03363037109375 469.8879699707031 C 252.86419677734375 478.6138610839844 258.3853759765625 486.2189636230469 265.80560302734375 491.61279296875 C 273.225830078125 497.0066223144531 282.1638488769531 499.9119873046875 291.33734130859375 499.9119873046875 C 300.5108642578125 499.9119873046875 309.4483642578125 497.0066223144531 316.86859130859375 491.61279296875 C 324.288818359375 486.2189636230469 329.81048583984375 478.6138610839844 332.64105224609375 469.8879699707031 C 335.4335021972656 478.48614501953125 340.8388977050781 485.9989013671875 348.10394287109375 491.37908935546875 C 355.36895751953125 496.7592468261719 364.1315612792969 499.7387390136719 373.17034912109375 499.90228271484375 C 382.20916748046875 500.0658264160156 391.0733642578125 497.4051208496094 398.52825927734375 492.291259765625 C 405.9831237792969 487.1773986816406 411.6571044921875 479.8652038574219 414.75872802734375 471.3736572265625 C 417.8182067871094 479.7403259277344 423.3753662109375 486.96441650390625 430.67718505859375 492.06787109375 C 437.9790344238281 497.1712951660156 446.6724853515625 499.9073486328125 455.58099365234375 499.9053955078125 L 456.57757568359375 499.9053955078125 C 468.09393310546875 499.9053955078125 479.1383972167969 495.3305358886719 487.28167724609375 487.187255859375 C 495.42498779296875 479.0439453125 499.99993896484375 467.9992980957031 499.99993896484375 456.4829406738281 L 499.99993896484375 455.87518310546875 C 499.9955749511719 448.3993835449219 498.05950927734375 441.0514831542969 494.37982177734375 434.54400634765625 C 490.70013427734375 428.0364990234375 485.4018859863281 422.5902404785156 478.99798583984375 418.73309326171875 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "1-16"));
    tmpGrids.back().slots.push_back(RectSlot(
        70.0f, 77.0f, 500.00006103515625f, 485.3585205078125f, 
        0, 
        false, 
        "M 0 485.3585205078125 C 0 444.9385986328125 44.0029296875 444.93853759765625 44.0029296875 404.5343322753906 C 44.0029296875 364.130126953125 0 364.1145324707031 0 323.7103271484375 C 0 283.3061218261719 44.0029296875 283.2903137207031 44.0029296875 242.8861083984375 C 44.0029296875 202.48190307617188 0 202.46629333496094 0 162.0620880126953 C 0 121.65788269042969 44.0029296875 121.6420669555664 44.0029296875 81.2221450805664 C 44.0029296875 40.802223205566406 0 40.8023279607296 0 0.398122638463974 C 0 0.398122638463974 500.00006103515625 -0.4976532757282257 500.00006103515625 0.398122638463974 C 500.00006103515625 40.8023279607296 455.99713134765625 40.802207946777344 455.99713134765625 81.20641326904297 C 455.99713134765625 121.6106185913086 500.00006103515625 121.62641906738281 500.00006103515625 162.03062438964844 C 500.00006103515625 202.43482971191406 455.99713134765625 202.450439453125 455.99713134765625 242.85464477539062 C 455.99713134765625 283.25885009765625 500.00006103515625 283.274658203125 500.00006103515625 323.6788635253906 C 500.00006103515625 364.08306884765625 455.99713134765625 364.09869384765625 455.99713134765625 404.51861572265625 C 455.99713134765625 444.93853759765625 500.00006103515625 444.9385986328125 500.00006103515625 485.3585205078125 L 0 485.3585205078125 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "1-15"));
    tmpGrids.back().slots.push_back(RectSlot(
        70.0f, 70.0f, 500.0002136230469f, 500.0f, 
        0, 
        false, 
        "M 456.9722595214844 456.99871826171875 C 484.4184875488281 429.53912353515625 499.886474609375 392.3370361328125 499.9996032714844 353.51385498046875 C 500.1127014160156 314.6907043457031 484.8615417480469 277.3994903564453 457.5757751464844 249.78045654296875 C 484.6505432128906 222.11654663085938 499.7193908691406 184.8894805908203 499.5098571777344 146.18264770507812 C 499.3003234863281 107.47581481933594 483.8293151855469 70.41415786743164 456.4566345214844 43.04496765136719 C 429.0839538574219 15.675777435302734 392.0194091796875 0.20858062920160592 353.3106384277344 0.0020941358525305986 C 314.6018981933594 -0.20439235749654472 277.3741760253906 14.866521835327148 249.7110137939453 41.94213104248047 C 221.9438934326172 15.422714233398438 184.90037536621094 0.8227242231369019 146.50550842285156 1.265659213066101 C 108.11063385009766 1.7085942029953003 71.41364669799805 17.159183502197266 44.26576614379883 44.31211853027344 C 17.117887496948242 71.46505355834961 1.6747756004333496 108.16382598876953 1.2408638000488281 146.55690002441406 C 0.8069519996643066 184.94998168945312 15.41672134399414 221.98826599121094 41.94398880004883 249.74777221679688 C 14.867042541503906 277.4095458984375 -0.20440243207849562 314.63531494140625 0.0020942685659974813 353.3421630859375 C 0.20859096921049058 392.04901123046875 15.676475524902344 429.1119079589844 43.04701614379883 456.4832458496094 C 70.41756057739258 483.8545837402344 107.48085021972656 499.32452392578125 146.18959045410156 499.5340576171875 C 184.89834594726562 499.74359130859375 222.12728881835938 484.6756591796875 249.7925567626953 457.6022033691406 C 277.410888671875 484.8717346191406 314.69329833984375 500.11248779296875 353.5064392089844 499.9993896484375 C 392.319580078125 499.88629150390625 429.5133361816406 484.4287109375 456.9722595214844 456.99871826171875 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "1-14"));
    tmpGrids.back().slots.push_back(RectSlot(
        74.0f, 74.0f, 492.0f, 492.0f, 
        0, 
        false, 
        "M 443.5878047368353 48.41208539987504 C 524.5071924157614 129.33146805733205 501.64251955809493 283.39271797076503 392.5177191509135 392.5175116061847 C 283.392918743732 501.6423052416044 129.3314150206988 524.5072819920018 48.41202734177271 443.5878993345448 C -32.507360337153386 362.6685166770878 -9.642198980892147 208.6072820292349 99.48260142628929 99.48248839381522 C 208.60740183347073 -9.64230524160449 362.6684170579092 -32.50729725758197 443.5878047368353 48.41208539987504 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "1-13"));
    tmpGrids.back().slots.push_back(RectSlot(
        70.0f, 70.0f, 500.00006103515625f, 500.0f, 
        0, 
        false, 
        "M 500.00006103515625 500 L 0 500 L 0 249.960205078125 C 0.0211911853402853 183.65933990478516 26.369678497314453 120.08097457885742 73.25146484375 73.20667266845703 C 120.13325119018555 26.33237075805664 183.7100372314453 -0.0000033876630283024678 250.00030517578125 3.2686746647032916e-13 C 316.3044128417969 3.2686746647032916e-13 379.89234161376953 26.343570709228516 426.77642822265625 73.23516082763672 C 473.66051483154297 120.12675094604492 500.00006103515625 183.7250747680664 500.00006103515625 250.039794921875 L 500.00006103515625 500 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "1-12"));
    tmpGrids.back().slots.push_back(RectSlot(
        70.0f, 70.0f, 499.99993896484375f, 500.0f, 
        0, 
        false, 
        "M 317.23065185546875 500 L 0 500 L 0 181.28009033203125 C 0.025242889299988747 133.19570922851562 19.291831970214844 87.08891296386719 53.564453125 53.09550476074219 C 87.83707427978516 19.102096557617188 134.31051635742188 0.0041681923903524876 182.768798828125 0 L 499.99993896484375 0 L 499.99993896484375 318.71990966796875 C 499.9789123535156 366.8055419921875 480.7134094238281 412.9147644042969 446.43988037109375 446.9090881347656 C 412.16632080078125 480.9034118652344 365.69024658203125 500 317.23065185546875 500 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "1-11"));
    tmpGrids.back().slots.push_back(RectSlot(
        70.0f, 70.0f, 500.00006103515625f, 500.0001220703125f, 
        0, 
        false, 
        "M 359.50396728515625 0 L 0 0 L 0 359.5039367675781 L 140.4962158203125 500.0001220703125 L 500.00006103515625 500.0001220703125 L 500.00006103515625 140.4801483154297 L 359.50396728515625 0 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "1-10"));
    tmpGrids.back().slots.push_back(RectSlot(
        70.0f, 70.0f, 499.99993896484375f, 500.00006103515625f, 
        0, 
        false, 
        "M 401.46087646484375 0 L 98.53912353515625 0 C 44.11748123168945 0 0 44.117496490478516 0 98.53913879394531 L 0 401.4609375 C 0 455.882568359375 44.11748123168945 500.00006103515625 98.53912353515625 500.00006103515625 L 401.46087646484375 500.00006103515625 C 455.88250732421875 500.00006103515625 499.99993896484375 455.882568359375 499.99993896484375 401.4609375 L 499.99993896484375 98.53913879394531 C 499.99993896484375 44.117496490478516 455.88250732421875 0 401.46087646484375 0 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "1-9"));
    tmpGrids.back().slots.push_back(RectSlot(
        37.0f, 37.0f, 565.6854248046875f, 565.6854248046875f, 
        0, 
        false, 
        "M 282.84271240234375 0 L 565.6854248046875 282.84271240234375 L 282.84271240234375 565.6854248046875 L 0 282.84271240234375 L 282.84271240234375 0 Z")
    );
    mBucket[1] = tmpGrids;

    // ===== For 2 photo =====

    tmpGrids.clear();

    tmpGrids.push_back(Grid(gGridName + "2-25"));
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 320.0f, 640.0f, 320.0f, 
        0, 
        true, 
        "M 200 0.0000023849761419114657 L 200 120 L 440 120 L 440 0.000005246947694104165 L 640 0.00000763192383601563 L 640 320 L 0 320 L 0.000003815963282249868 0 L 200 0.0000023849761419114657 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 0.0f, 640.0f, 320.0f, 
        0, 
        true, 
        "M 0.000003815963282249868 0 L 0 320 L 200 320 L 200 200 L 440 200 L 440 320 L 640 320 L 640 0.00000763192383601563 L 0.000003815963282249868 0 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "2-24"));
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 0.0f, 320.0f, 640.0f, 
        0, 
        true, 
        "M 320 0 L 0 0 L 0 640 L 320 640 L 320 440 C 253.725830078125 440 200 386.274169921875 200 320 C 200 253.725830078125 253.725830078125 200 320 200 L 320 0 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        320.0f, 0.0f, 320.0f, 640.0f, 
        0, 
        true, 
        "M 320 0 L 0 0 L 0 200 C 66.274169921875 200 120 253.725830078125 120 320 C 120 386.274169921875 66.274169921875 440 0 440 L 0 640 L 320 640 L 320 0 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "2-23"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 240.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 0.0f, 640.0f, 640.0f, 
        0, 
        true, 
        "M 640 0 L 240 0 L 240 240 L 0 240 L 0 640 L 640 640 L 640 0 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "2-22"));
    tmpGrids.back().slots.push_back(RectSlot(400.0f, 400.0f, 240.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 0.0f, 640.0f, 640.0f, 
        0, 
        true, 
        "M 640 0 L 0 0 L 0 640 L 400 640 L 400 400 L 640 400 L 640 0 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "2-21"));
    tmpGrids.back().slots.push_back(RectSlot(320.0f, 200.0f, 320.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 200.0f, 320.0f, 240.0f));

    tmpGrids.push_back(Grid(gGridName + "2-20"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 320.0f, 640.0f, 320.0f));
    tmpGrids.back().slots.push_back(RectSlot(120.0f, 40.0f, 400.0f, 240.0f));

    tmpGrids.push_back(Grid(gGridName + "2-19"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 640.0f, 320.0f));
    tmpGrids.back().slots.push_back(RectSlot(120.0f, 360.0f, 400.0f, 240.0f));

    tmpGrids.push_back(Grid(gGridName + "2-18"));
    tmpGrids.back().slots.push_back(RectSlot(120.0f, 320.0f, 400.0f, 270.0f));
    tmpGrids.back().slots.push_back(RectSlot(120.0f, 50.0f, 400.0f, 270.0f));

    tmpGrids.push_back(Grid(gGridName + "2-17"));
    tmpGrids.back().slots.push_back(RectSlot(49.99998092651367f, 119.99998474121094f, 270.0000305175781f, 400.0f));
    tmpGrids.back().slots.push_back(RectSlot(319.9999694824219f, 119.99998474121094f, 270.0000305175781f, 400.0f));
    mBucket[2] = tmpGrids;

    // ===== For 3 photo =====

    tmpGrids.clear();

    tmpGrids.push_back(Grid(gGridName + "3-29"));
    tmpGrids.back().slots.push_back(RectSlot(
        107.0f, 0.0f, 532.9584350585938f, 240.8397979736328f, 
        0, 
        true, 
        "M 40.78863525390625 0.000004862849891651422 L 0 176.58998107910156 L 477.32916259765625 240.8397979736328 L 532.9584350585938 0 L 40.78863525390625 0.000004862849891651422 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 399.0f, 532.961181640625f, 240.843505859375f, 
        0, 
        true, 
        "M 532.961181640625 64.24981689453125 L 55.632076263427734 0 L 0 240.843505859375 L 492.1697998046875 240.843505859375 L 532.961181640625 64.24981689453125 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        56.0f, 177.0f, 528.7385864257812f, 286.81634521484375f, 
        0, 
        true, 
        "M 51.40948486328125 0 L 528.7385864257812 64.24981689453125 L 477.32916259765625 286.81634521484375 L 0 222.5665283203125 L 51.40948486328125 0 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "3-28"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 427.0f, 320.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 320.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(320.0f, 213.0f, 320.0f, 214.0f));

    tmpGrids.push_back(Grid(gGridName + "3-27"));
    tmpGrids.back().slots.push_back(RectSlot(320.0f, 0.0f, 320.0f, 213.00001525878906f));
    tmpGrids.back().slots.push_back(RectSlot(320.0f, 427.0f, 320.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 212.99998474121094f, 320.0f, 214.00001525878906f));

    tmpGrids.push_back(Grid(gGridName + "3-26"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 217.0f, 213.3000030517578f, 213.3000030517578f));
    tmpGrids.back().slots.push_back(RectSlot(213.30078125f, 217.0f, 213.3000030517578f, 213.3000030517578f));
    tmpGrids.back().slots.push_back(RectSlot(426.599609375f, 217.0f, 213.400390625f, 213.3000030517578f));

    tmpGrids.push_back(Grid(gGridName + "3-25"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 350.0f, 213.3000030517578f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 213.30078125f, 350.0f, 213.3000030517578f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 426.599609375f, 350.0f, 213.400390625f));

    tmpGrids.push_back(Grid(gGridName + "3-24"));
    tmpGrids.back().slots.push_back(RectSlot(290.0f, 0.0f, 350.0f, 213.3000030517578f));
    tmpGrids.back().slots.push_back(RectSlot(290.0f, 213.30078125f, 350.0f, 213.3000030517578f));
    tmpGrids.back().slots.push_back(RectSlot(290.0f, 426.599609375f, 350.0f, 213.400390625f));

    tmpGrids.push_back(Grid(gGridName + "3-23"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 240.0f, 360.0f, 400.0f));
    tmpGrids.back().slots.push_back(RectSlot(360.0f, 239.99998474121094f, 280.0f, 280.0f));
    tmpGrids.back().slots.push_back(RectSlot(239.99998474121094f, 0.0f, 400.00001525878906f, 240.0f));

    tmpGrids.push_back(Grid(gGridName + "3-22"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 400.0f, 320.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 163.0f, 320.0f, 237.0f));
    tmpGrids.back().slots.push_back(RectSlot(320.0f, 0.0f, 320.0f, 400.0f));

    tmpGrids.push_back(Grid(gGridName + "3-21"));
    tmpGrids.back().slots.push_back(RectSlot(120.0f, 0.0f, 400.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(120.0f, 213.0f, 400.0f, 214.0f));
    tmpGrids.back().slots.push_back(RectSlot(120.0f, 427.0f, 400.0f, 213.0f));
    mBucket[3] = tmpGrids;

    // ===== For 4 photo =====

    tmpGrids.clear();

    tmpGrids.push_back(Grid(gGridName + "4-39"));
    tmpGrids.back().slots.push_back(RectSlot(60.0f, 320.0f, 300.0f, 320.0f));
    tmpGrids.back().slots.push_back(RectSlot(360.0f, 320.0f, 280.0f, 222.0f));
    tmpGrids.back().slots.push_back(RectSlot(280.0f, 0.0f, 300.0f, 320.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 75.0f, 280.0f, 245.0f));

    tmpGrids.push_back(Grid(gGridName + "4-38"));
    tmpGrids.back().slots.push_back(RectSlot(213.0f, 0.0f, 214.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(213.0f, 427.0f, 214.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(427.0f, 213.0f, 213.0f, 214.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 213.0f, 213.0f, 214.0f));

    tmpGrids.push_back(Grid(gGridName + "4-37"));
    tmpGrids.back().slots.push_back(RectSlot(410.0f, 80.0f, 230.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(230.0f, 320.0f, 230.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(180.0f, 80.0f, 230.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 320.0f, 230.0f, 240.0f));

    tmpGrids.push_back(Grid(gGridName + "4-36"));
    tmpGrids.back().slots.push_back(RectSlot(230.0f, 80.0f, 230.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(410.0f, 320.0f, 230.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 80.0f, 230.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(180.0f, 320.0f, 230.0f, 240.0f));

    tmpGrids.push_back(Grid(gGridName + "4-35"));
    tmpGrids.back().slots.push_back(RectSlot(427.00067138671875f, 0.0f, 212.99932861328125f, 260.0000305175781f));
    tmpGrids.back().slots.push_back(RectSlot(110.333984375f, 319.9999694824219f, 420.0000305175781f, 280.0000305175781f));
    tmpGrids.back().slots.push_back(RectSlot(214.0006561279297f, 0.0f, 213.33334350585938f, 260.0000305175781f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 213.33334350585938f, 260.0000305175781f));

    tmpGrids.push_back(Grid(gGridName + "4-34"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 380.0f, 213.3333282470703f, 260.0f));
    tmpGrids.back().slots.push_back(RectSlot(110.0f, 40.0f, 420.0f, 280.0f));
    tmpGrids.back().slots.push_back(RectSlot(213.0f, 380.0f, 213.3333282470703f, 260.0f));
    tmpGrids.back().slots.push_back(RectSlot(427.0f, 380.0f, 213.0f, 260.0f));

    tmpGrids.push_back(Grid(gGridName + "4-33"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 213.0f, 249.0f, 427.0f));
    tmpGrids.back().slots.push_back(RectSlot(391.0f, 0.0f, 249.0f, 427.0000305175781f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 249.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(391.0f, 426.9999694824219f, 249.0f, 213.00003051757812f));

    tmpGrids.push_back(Grid(gGridName + "4-32"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 427.0f, 249.00001525878906f));
    tmpGrids.back().slots.push_back(RectSlot(213.0f, 391.0f, 427.0f, 249.0f));
    tmpGrids.back().slots.push_back(RectSlot(426.998046875f, 0.0f, 213.001953125f, 249.00001525878906f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 391.0f, 213.00003051757812f, 249.0f));

    tmpGrids.push_back(Grid(gGridName + "4-31"));
    tmpGrids.back().slots.push_back(RectSlot(320.0f, 0.0f, 320.0f, 200.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 200.0f, 412.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(411.9999694824219f, 200.0f, 228.00003051757812f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 440.0f, 320.0f, 200.0f));

    tmpGrids.push_back(Grid(gGridName + "4-30"));
    tmpGrids.back().slots.push_back(RectSlot(213.0f, 0.0f, 213.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(213.0f, 213.0f, 427.0f, 427.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 213.0f, 213.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 213.0f, 213.0f));

    tmpGrids.push_back(Grid(gGridName + "4-29"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 400.0f, 160.00003051757812f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(160.0f, 400.0f, 160.0f, 240.0f));
    tmpGrids.back().slots.push_back(RectSlot(320.0f, 401.0f, 160.0f, 239.0f));
    tmpGrids.back().slots.push_back(RectSlot(159.99998474121094f, 0.0f, 480.00001525878906f, 400.0f));

    tmpGrids.push_back(Grid(gGridName + "4-28"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 446.0f, 200.0f, 194.0f));
    tmpGrids.back().slots.push_back(RectSlot(200.0f, 446.0f, 200.0f, 194.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 400.0f, 320.0f));
    tmpGrids.back().slots.push_back(RectSlot(400.0f, 320.0f, 240.0f, 320.0f));

    tmpGrids.push_back(Grid(gGridName + "4-27"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 320.0f, 200.00003051757812f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 199.99998474121094f, 320.0f, 200.00003051757812f));
    tmpGrids.back().slots.push_back(RectSlot(319.9999694824219f, 0.0f, 320.0000305175781f, 400.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 400.0f, 320.0f, 240.0f));

    tmpGrids.push_back(Grid(gGridName + "4-26"));
    tmpGrids.back().slots.push_back(RectSlot(310.0f, 0.0f, 330.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(310.0f, 213.0f, 330.0f, 427.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 427.0f, 310.0f, 213.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 310.0f, 213.0f));

    tmpGrids.push_back(Grid(gGridName + "4-25"));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 320.0f, 354.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 354.0f, 213.0f, 286.0f));
    tmpGrids.back().slots.push_back(RectSlot(320.0f, 0.0f, 320.0f, 354.0f));
    tmpGrids.back().slots.push_back(RectSlot(427.0f, 354.0f, 213.0f, 286.0f));

    tmpGrids.push_back(Grid(gGridName + "4-24"));
    tmpGrids.back().slots.push_back(RectSlot(213.0f, 249.0078125f, 427.0f, 249.0f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 0.0f, 427.0000305175781f, 249.0000457763672f));
    tmpGrids.back().slots.push_back(RectSlot(0.0f, 249.0078125f, 213.0f, 249.0f));
    tmpGrids.back().slots.push_back(RectSlot(426.9999694824219f, 0.0f, 213.00003051757812f, 249.00001525878906f));

    tmpGrids.push_back(Grid(gGridName + "4-23"));
    tmpGrids.back().slots.push_back(RectSlot(
        319.0f, 0.0f, 321.0f, 458.4999694824219f, 
        0, 
        true, 
        "M 141 0 L 321 0 L 321 458.4999694824219 L 0 320.9999694824219 L 141 0 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 0.0f, 459.9999694824219f, 321.0f, 
        0, 
        true, 
        "M 0 0 L 459.9999694824219 0 L 319 321 L 0 183 L 0 0 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 183.0f, 319.0001525878906f, 457.0f, 
        0, 
        true, 
        "M 0.0001532435417175293 0 L 319.0001525878906 138 L 174.00015258789062 457 L 0 457 L 0.0001532435417175293 0 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        174.0f, 321.0f, 466.0f, 319.0f, 
        0, 
        true, 
        "M 145.00001525878906 0 L 466 137.5 L 466 319 L 0 319 L 145.00001525878906 0 Z")
    );

    tmpGrids.push_back(Grid(gGridName + "4-22"));
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 0.0f, 320.0f, 460.0000305175781f, 
        0, 
        true, 
        "M 0 0 L 180 0 L 320 320 L 0 460.0000305175781 L 0 0 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        180.0f, 0.0f, 460.0f, 320.0f, 
        0, 
        true, 
        "M 0 0 L 460 0 L 460 181 L 140 320 L 0 0 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        320.0f, 181.0f, 320.0f, 460.0f, 
        0, 
        true, 
        "M 0 139 L 320 0 L 320 460 L 140 460 L 0 139 Z")
    );
    tmpGrids.back().slots.push_back(RectSlot(
        0.0f, 320.0f, 460.0f, 321.0f, 
        0, 
        true, 
        "M 0 139.5 L 320 0 L 460 321 L 0 321 L 0 139.5 Z")
    );
    mBucket[4] = tmpGrids;

}

AdditionSVGSampler::~AdditionSVGSampler() {
    mBucket.clear();
}

std::vector<Grid> AdditionSVGSampler::sample(RectF& canvas,
                                          std::vector<Photo>& photos) {
    if (photos.size() < mBucket.size()) {
        return mBucket[photos.size()];
    } else {
        // TODO: We still need valid results.
        return std::vector<Grid>(0);
    }
}
